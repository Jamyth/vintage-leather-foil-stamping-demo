import React from "react";
import "./iconfont.less";

// Attention: This file is generated by "yarn icon", do not modify

export enum IconClass {
    SETTINGS_SLIDER = "icon-settings-slider",
    CROSS = "icon-cross",
    VINTAGE_LEATHER = "icon-vintage-leather",
    SUN = "icon-sun",
    CRESCENT_MOON = "icon-crescent-moon",
    WHATSAPP = "icon-whatsapp",
    GOOGLE = "icon-google",
    FACEBOOK = "icon-facebook",
    SOLD_SIGN = "icon-sold-sign",
    DOOR = "icon-door",
    WARNING_TRIANGLE = "icon-warning-triangle",
    USERS = "icon-users",
    USER_1 = "icon-user-1",
    USER_2 = "icon-user-2",
    UPLOAD = "icon-upload",
    TAGS = "icon-tags",
    SETTINGS_GEAR = "icon-settings-gear",
    PENCIL = "icon-pencil",
    NAVIGATION = "icon-navigation",
    LOADING = "icon-loading",
    LOGIN = "icon-login",
    INFORMATION = "icon-information",
    IMAGES = "icon-images",
    IMAGE = "icon-image",
    DOWNLOAD = "icon-download",
    CHEVRON_DOWN = "icon-chevron-down",
    CHEVRON_RIGHT = "icon-chevron-right",
    BIN = "icon-bin",
    PIE_CHART = "icon-pie-chart",
    INVOICE = "icon-invoice",
    SHOPPING_LIST = "icon-shopping-list",
    RECEIPT = "icon-receipt",
    FILTER = "icon-filter",
    DISCOUNT_COUPON = "icon-discount-coupon",
    DELIVERY_TRUCK = "icon-delivery-truck",
    CAMERA = "icon-camera",
}

export interface Props extends React.HTMLAttributes<HTMLSpanElement> {
    type: IconClass;
    children?: React.ReactNode;
    iconPosition?: "left" | "right";
}

export class Icon extends React.PureComponent<Props> {
    static displayName = "Icon";

    static defaultProps: Partial<Props> = {
        iconPosition: "left",
    };

    override render() {
        const { type, children, iconPosition, className, ...restProps } = this.props;
        if (children) {
            if (iconPosition === "right") {
                return (
                    <span className={`g-iconfont-icon-with-text-on-left ${className ? className : ""}`} {...restProps}>
                        <span>{children}</span>
                        <i className={`g-iconfont-icon ${type}`} />
                    </span>
                );
            } else {
                return (
                    <span className={`g-iconfont-icon-with-text-on-right ${className ? className : ""}`} {...restProps}>
                        <i className={`g-iconfont-icon ${type}`} />
                        <span>{children}</span>
                    </span>
                );
            }
        } else {
            return <i className={`g-iconfont-icon ${type} ${className ? className : ""}`} {...restProps} />;
        }
    }
}
